// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: projections/management/backchannel.proto

package managementpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackchannelRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type    string                 `protobuf:"bytes,1,opt,name=type,proto3"`
	xxx_hidden_Payload map[string]string      `protobuf:"bytes,2,rep,name=payload,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BackchannelRequest) Reset() {
	*x = BackchannelRequest{}
	mi := &file_projections_management_backchannel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackchannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackchannelRequest) ProtoMessage() {}

func (x *BackchannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projections_management_backchannel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BackchannelRequest) GetType() string {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ""
}

func (x *BackchannelRequest) GetPayload() map[string]string {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *BackchannelRequest) SetType(v string) {
	x.xxx_hidden_Type = v
}

func (x *BackchannelRequest) SetPayload(v map[string]string) {
	x.xxx_hidden_Payload = v
}

type BackchannelRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type    string
	Payload map[string]string
}

func (b0 BackchannelRequest_builder) Build() *BackchannelRequest {
	m0 := &BackchannelRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type BackchannelResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackchannelResponse) Reset() {
	*x = BackchannelResponse{}
	mi := &file_projections_management_backchannel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackchannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackchannelResponse) ProtoMessage() {}

func (x *BackchannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projections_management_backchannel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type BackchannelResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 BackchannelResponse_builder) Build() *BackchannelResponse {
	m0 := &BackchannelResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_projections_management_backchannel_proto protoreflect.FileDescriptor

const file_projections_management_backchannel_proto_rawDesc = "" +
	"\n" +
	"(projections/management/backchannel.proto\x12\x1cfreym.projections.management\"\xbd\x01\n" +
	"\x12BackchannelRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12W\n" +
	"\apayload\x18\x02 \x03(\v2=.freym.projections.management.BackchannelRequest.PayloadEntryR\apayload\x1a:\n" +
	"\fPayloadEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x15\n" +
	"\x13BackchannelResponseb\x06proto3"

var file_projections_management_backchannel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_projections_management_backchannel_proto_goTypes = []any{
	(*BackchannelRequest)(nil),  // 0: freym.projections.management.BackchannelRequest
	(*BackchannelResponse)(nil), // 1: freym.projections.management.BackchannelResponse
	nil,                         // 2: freym.projections.management.BackchannelRequest.PayloadEntry
}
var file_projections_management_backchannel_proto_depIdxs = []int32{
	2, // 0: freym.projections.management.BackchannelRequest.payload:type_name -> freym.projections.management.BackchannelRequest.PayloadEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_projections_management_backchannel_proto_init() }
func file_projections_management_backchannel_proto_init() {
	if File_projections_management_backchannel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_projections_management_backchannel_proto_rawDesc), len(file_projections_management_backchannel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_projections_management_backchannel_proto_goTypes,
		DependencyIndexes: file_projections_management_backchannel_proto_depIdxs,
		MessageInfos:      file_projections_management_backchannel_proto_msgTypes,
	}.Build()
	File_projections_management_backchannel_proto = out.File
	file_projections_management_backchannel_proto_goTypes = nil
	file_projections_management_backchannel_proto_depIdxs = nil
}
