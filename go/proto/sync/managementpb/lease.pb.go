// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sync/management/lease.proto

package managementpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lock struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId  string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_TenantId string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_Resource []string               `protobuf:"bytes,3,rep,name=resource,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Lock) Reset() {
	*x = Lock{}
	mi := &file_sync_management_lease_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Lock) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *Lock) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *Lock) GetResource() []string {
	if x != nil {
		return x.xxx_hidden_Resource
	}
	return nil
}

func (x *Lock) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *Lock) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *Lock) SetResource(v []string) {
	x.xxx_hidden_Resource = v
}

type Lock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId  string
	TenantId string
	Resource []string
}

func (b0 Lock_builder) Build() *Lock {
	m0 := &Lock{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_Resource = b.Resource
	return m0
}

type CreateLeaseRequest struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ip                      string                 `protobuf:"bytes,1,opt,name=ip,proto3"`
	xxx_hidden_App                     string                 `protobuf:"bytes,2,opt,name=app,proto3"`
	xxx_hidden_Ttl                     int32                  `protobuf:"varint,3,opt,name=ttl,proto3"`
	xxx_hidden_LeaseId                 string                 `protobuf:"bytes,4,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_AlreadyRegisteredLocks  *[]*Lock               `protobuf:"bytes,5,rep,name=already_registered_locks,json=alreadyRegisteredLocks,proto3"`
	xxx_hidden_AlreadyRegisteredRlocks *[]*Lock               `protobuf:"bytes,6,rep,name=already_registered_rlocks,json=alreadyRegisteredRlocks,proto3"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *CreateLeaseRequest) Reset() {
	*x = CreateLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaseRequest) ProtoMessage() {}

func (x *CreateLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLeaseRequest) GetIp() string {
	if x != nil {
		return x.xxx_hidden_Ip
	}
	return ""
}

func (x *CreateLeaseRequest) GetApp() string {
	if x != nil {
		return x.xxx_hidden_App
	}
	return ""
}

func (x *CreateLeaseRequest) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *CreateLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *CreateLeaseRequest) GetAlreadyRegisteredLocks() []*Lock {
	if x != nil {
		if x.xxx_hidden_AlreadyRegisteredLocks != nil {
			return *x.xxx_hidden_AlreadyRegisteredLocks
		}
	}
	return nil
}

func (x *CreateLeaseRequest) GetAlreadyRegisteredRlocks() []*Lock {
	if x != nil {
		if x.xxx_hidden_AlreadyRegisteredRlocks != nil {
			return *x.xxx_hidden_AlreadyRegisteredRlocks
		}
	}
	return nil
}

func (x *CreateLeaseRequest) SetIp(v string) {
	x.xxx_hidden_Ip = v
}

func (x *CreateLeaseRequest) SetApp(v string) {
	x.xxx_hidden_App = v
}

func (x *CreateLeaseRequest) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
}

func (x *CreateLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *CreateLeaseRequest) SetAlreadyRegisteredLocks(v []*Lock) {
	x.xxx_hidden_AlreadyRegisteredLocks = &v
}

func (x *CreateLeaseRequest) SetAlreadyRegisteredRlocks(v []*Lock) {
	x.xxx_hidden_AlreadyRegisteredRlocks = &v
}

type CreateLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ip                      string
	App                     string
	Ttl                     int32
	LeaseId                 string
	AlreadyRegisteredLocks  []*Lock
	AlreadyRegisteredRlocks []*Lock
}

func (b0 CreateLeaseRequest_builder) Build() *CreateLeaseRequest {
	m0 := &CreateLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ip = b.Ip
	x.xxx_hidden_App = b.App
	x.xxx_hidden_Ttl = b.Ttl
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_AlreadyRegisteredLocks = &b.AlreadyRegisteredLocks
	x.xxx_hidden_AlreadyRegisteredRlocks = &b.AlreadyRegisteredRlocks
	return m0
}

type CreateLeaseResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateLeaseResponse) Reset() {
	*x = CreateLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaseResponse) ProtoMessage() {}

func (x *CreateLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLeaseResponse) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *CreateLeaseResponse) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

type CreateLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
}

func (b0 CreateLeaseResponse_builder) Build() *CreateLeaseResponse {
	m0 := &CreateLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	return m0
}

type KeepLeaseRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_Ttl     int32                  `protobuf:"varint,2,opt,name=ttl,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *KeepLeaseRequest) Reset() {
	*x = KeepLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepLeaseRequest) ProtoMessage() {}

func (x *KeepLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeepLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *KeepLeaseRequest) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *KeepLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *KeepLeaseRequest) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
}

type KeepLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
	Ttl     int32
}

func (b0 KeepLeaseRequest_builder) Build() *KeepLeaseRequest {
	m0 := &KeepLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_Ttl = b.Ttl
	return m0
}

type KeepLeaseResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepLeaseResponse) Reset() {
	*x = KeepLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepLeaseResponse) ProtoMessage() {}

func (x *KeepLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type KeepLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 KeepLeaseResponse_builder) Build() *KeepLeaseResponse {
	m0 := &KeepLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DropLeaseRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DropLeaseRequest) Reset() {
	*x = DropLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLeaseRequest) ProtoMessage() {}

func (x *DropLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *DropLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

type DropLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
}

func (b0 DropLeaseRequest_builder) Build() *DropLeaseRequest {
	m0 := &DropLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	return m0
}

type DropLeaseResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropLeaseResponse) Reset() {
	*x = DropLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLeaseResponse) ProtoMessage() {}

func (x *DropLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DropLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DropLeaseResponse_builder) Build() *DropLeaseResponse {
	m0 := &DropLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_sync_management_lease_proto protoreflect.FileDescriptor

const file_sync_management_lease_proto_rawDesc = "" +
	"\n" +
	"\x1bsync/management/lease.proto\x12\x15freym.sync.management\"Z\n" +
	"\x04Lock\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\tR\aleaseId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1a\n" +
	"\bresource\x18\x03 \x03(\tR\bresource\"\x93\x02\n" +
	"\x12CreateLeaseRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x10\n" +
	"\x03app\x18\x02 \x01(\tR\x03app\x12\x10\n" +
	"\x03ttl\x18\x03 \x01(\x05R\x03ttl\x12\x19\n" +
	"\blease_id\x18\x04 \x01(\tR\aleaseId\x12U\n" +
	"\x18already_registered_locks\x18\x05 \x03(\v2\x1b.freym.sync.management.LockR\x16alreadyRegisteredLocks\x12W\n" +
	"\x19already_registered_rlocks\x18\x06 \x03(\v2\x1b.freym.sync.management.LockR\x17alreadyRegisteredRlocks\"0\n" +
	"\x13CreateLeaseResponse\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\tR\aleaseId\"?\n" +
	"\x10KeepLeaseRequest\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\tR\aleaseId\x12\x10\n" +
	"\x03ttl\x18\x02 \x01(\x05R\x03ttl\"\x13\n" +
	"\x11KeepLeaseResponse\"-\n" +
	"\x10DropLeaseRequest\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\tR\aleaseId\"\x13\n" +
	"\x11DropLeaseResponseb\x06proto3"

var file_sync_management_lease_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sync_management_lease_proto_goTypes = []any{
	(*Lock)(nil),                // 0: freym.sync.management.Lock
	(*CreateLeaseRequest)(nil),  // 1: freym.sync.management.CreateLeaseRequest
	(*CreateLeaseResponse)(nil), // 2: freym.sync.management.CreateLeaseResponse
	(*KeepLeaseRequest)(nil),    // 3: freym.sync.management.KeepLeaseRequest
	(*KeepLeaseResponse)(nil),   // 4: freym.sync.management.KeepLeaseResponse
	(*DropLeaseRequest)(nil),    // 5: freym.sync.management.DropLeaseRequest
	(*DropLeaseResponse)(nil),   // 6: freym.sync.management.DropLeaseResponse
}
var file_sync_management_lease_proto_depIdxs = []int32{
	0, // 0: freym.sync.management.CreateLeaseRequest.already_registered_locks:type_name -> freym.sync.management.Lock
	0, // 1: freym.sync.management.CreateLeaseRequest.already_registered_rlocks:type_name -> freym.sync.management.Lock
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sync_management_lease_proto_init() }
func file_sync_management_lease_proto_init() {
	if File_sync_management_lease_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sync_management_lease_proto_rawDesc), len(file_sync_management_lease_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sync_management_lease_proto_goTypes,
		DependencyIndexes: file_sync_management_lease_proto_depIdxs,
		MessageInfos:      file_sync_management_lease_proto_msgTypes,
	}.Build()
	File_sync_management_lease_proto = out.File
	file_sync_management_lease_proto_goTypes = nil
	file_sync_management_lease_proto_depIdxs = nil
}
