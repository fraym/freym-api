// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: sync/management/lease.proto

package managementpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LocalLock struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId       string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_GlobalConcern string                 `protobuf:"bytes,3,opt,name=global_concern,json=globalConcern,proto3"`
	xxx_hidden_LocalConcern  string                 `protobuf:"bytes,4,opt,name=local_concern,json=localConcern,proto3"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *LocalLock) Reset() {
	*x = LocalLock{}
	mi := &file_sync_management_lease_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalLock) ProtoMessage() {}

func (x *LocalLock) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *LocalLock) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *LocalLock) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *LocalLock) GetGlobalConcern() string {
	if x != nil {
		return x.xxx_hidden_GlobalConcern
	}
	return ""
}

func (x *LocalLock) GetLocalConcern() string {
	if x != nil {
		return x.xxx_hidden_LocalConcern
	}
	return ""
}

func (x *LocalLock) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *LocalLock) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *LocalLock) SetGlobalConcern(v string) {
	x.xxx_hidden_GlobalConcern = v
}

func (x *LocalLock) SetLocalConcern(v string) {
	x.xxx_hidden_LocalConcern = v
}

type LocalLock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId       string
	TenantId      string
	GlobalConcern string
	LocalConcern  string
}

func (b0 LocalLock_builder) Build() *LocalLock {
	m0 := &LocalLock{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_GlobalConcern = b.GlobalConcern
	x.xxx_hidden_LocalConcern = b.LocalConcern
	return m0
}

type GlobalLock struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId       string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_GlobalConcern string                 `protobuf:"bytes,3,opt,name=global_concern,json=globalConcern,proto3"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GlobalLock) Reset() {
	*x = GlobalLock{}
	mi := &file_sync_management_lease_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalLock) ProtoMessage() {}

func (x *GlobalLock) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GlobalLock) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *GlobalLock) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *GlobalLock) GetGlobalConcern() string {
	if x != nil {
		return x.xxx_hidden_GlobalConcern
	}
	return ""
}

func (x *GlobalLock) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *GlobalLock) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *GlobalLock) SetGlobalConcern(v string) {
	x.xxx_hidden_GlobalConcern = v
}

type GlobalLock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId       string
	TenantId      string
	GlobalConcern string
}

func (b0 GlobalLock_builder) Build() *GlobalLock {
	m0 := &GlobalLock{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_GlobalConcern = b.GlobalConcern
	return m0
}

type CreateLeaseRequest struct {
	state                                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ip                           string                 `protobuf:"bytes,1,opt,name=ip,proto3"`
	xxx_hidden_App                          string                 `protobuf:"bytes,2,opt,name=app,proto3"`
	xxx_hidden_Ttl                          int32                  `protobuf:"varint,3,opt,name=ttl,proto3"`
	xxx_hidden_LeaseId                      string                 `protobuf:"bytes,4,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_AlreadyRegisteredLocalLocks  *[]*LocalLock          `protobuf:"bytes,5,rep,name=already_registered_local_locks,json=alreadyRegisteredLocalLocks,proto3"`
	xxx_hidden_AlreadyRegisteredGlobalLocks *[]*GlobalLock         `protobuf:"bytes,6,rep,name=already_registered_global_locks,json=alreadyRegisteredGlobalLocks,proto3"`
	unknownFields                           protoimpl.UnknownFields
	sizeCache                               protoimpl.SizeCache
}

func (x *CreateLeaseRequest) Reset() {
	*x = CreateLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaseRequest) ProtoMessage() {}

func (x *CreateLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLeaseRequest) GetIp() string {
	if x != nil {
		return x.xxx_hidden_Ip
	}
	return ""
}

func (x *CreateLeaseRequest) GetApp() string {
	if x != nil {
		return x.xxx_hidden_App
	}
	return ""
}

func (x *CreateLeaseRequest) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *CreateLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *CreateLeaseRequest) GetAlreadyRegisteredLocalLocks() []*LocalLock {
	if x != nil {
		if x.xxx_hidden_AlreadyRegisteredLocalLocks != nil {
			return *x.xxx_hidden_AlreadyRegisteredLocalLocks
		}
	}
	return nil
}

func (x *CreateLeaseRequest) GetAlreadyRegisteredGlobalLocks() []*GlobalLock {
	if x != nil {
		if x.xxx_hidden_AlreadyRegisteredGlobalLocks != nil {
			return *x.xxx_hidden_AlreadyRegisteredGlobalLocks
		}
	}
	return nil
}

func (x *CreateLeaseRequest) SetIp(v string) {
	x.xxx_hidden_Ip = v
}

func (x *CreateLeaseRequest) SetApp(v string) {
	x.xxx_hidden_App = v
}

func (x *CreateLeaseRequest) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
}

func (x *CreateLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *CreateLeaseRequest) SetAlreadyRegisteredLocalLocks(v []*LocalLock) {
	x.xxx_hidden_AlreadyRegisteredLocalLocks = &v
}

func (x *CreateLeaseRequest) SetAlreadyRegisteredGlobalLocks(v []*GlobalLock) {
	x.xxx_hidden_AlreadyRegisteredGlobalLocks = &v
}

type CreateLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ip                           string
	App                          string
	Ttl                          int32
	LeaseId                      string
	AlreadyRegisteredLocalLocks  []*LocalLock
	AlreadyRegisteredGlobalLocks []*GlobalLock
}

func (b0 CreateLeaseRequest_builder) Build() *CreateLeaseRequest {
	m0 := &CreateLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ip = b.Ip
	x.xxx_hidden_App = b.App
	x.xxx_hidden_Ttl = b.Ttl
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_AlreadyRegisteredLocalLocks = &b.AlreadyRegisteredLocalLocks
	x.xxx_hidden_AlreadyRegisteredGlobalLocks = &b.AlreadyRegisteredGlobalLocks
	return m0
}

type CreateLeaseResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateLeaseResponse) Reset() {
	*x = CreateLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeaseResponse) ProtoMessage() {}

func (x *CreateLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateLeaseResponse) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *CreateLeaseResponse) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

type CreateLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
}

func (b0 CreateLeaseResponse_builder) Build() *CreateLeaseResponse {
	m0 := &CreateLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	return m0
}

type KeepLeaseRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	xxx_hidden_Ttl     int32                  `protobuf:"varint,2,opt,name=ttl,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *KeepLeaseRequest) Reset() {
	*x = KeepLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepLeaseRequest) ProtoMessage() {}

func (x *KeepLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *KeepLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *KeepLeaseRequest) GetTtl() int32 {
	if x != nil {
		return x.xxx_hidden_Ttl
	}
	return 0
}

func (x *KeepLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

func (x *KeepLeaseRequest) SetTtl(v int32) {
	x.xxx_hidden_Ttl = v
}

type KeepLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
	Ttl     int32
}

func (b0 KeepLeaseRequest_builder) Build() *KeepLeaseRequest {
	m0 := &KeepLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	x.xxx_hidden_Ttl = b.Ttl
	return m0
}

type KeepLeaseResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepLeaseResponse) Reset() {
	*x = KeepLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepLeaseResponse) ProtoMessage() {}

func (x *KeepLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type KeepLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 KeepLeaseResponse_builder) Build() *KeepLeaseResponse {
	m0 := &KeepLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type DropLeaseRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_LeaseId string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DropLeaseRequest) Reset() {
	*x = DropLeaseRequest{}
	mi := &file_sync_management_lease_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLeaseRequest) ProtoMessage() {}

func (x *DropLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DropLeaseRequest) GetLeaseId() string {
	if x != nil {
		return x.xxx_hidden_LeaseId
	}
	return ""
}

func (x *DropLeaseRequest) SetLeaseId(v string) {
	x.xxx_hidden_LeaseId = v
}

type DropLeaseRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	LeaseId string
}

func (b0 DropLeaseRequest_builder) Build() *DropLeaseRequest {
	m0 := &DropLeaseRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_LeaseId = b.LeaseId
	return m0
}

type DropLeaseResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropLeaseResponse) Reset() {
	*x = DropLeaseResponse{}
	mi := &file_sync_management_lease_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropLeaseResponse) ProtoMessage() {}

func (x *DropLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_management_lease_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DropLeaseResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DropLeaseResponse_builder) Build() *DropLeaseResponse {
	m0 := &DropLeaseResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_sync_management_lease_proto protoreflect.FileDescriptor

var file_sync_management_lease_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x66,
	0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x6f,
	0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x72,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65,
	0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x22, 0x6b, 0x0a, 0x0a, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x72, 0x6e, 0x22, 0xb4, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x65, 0x0a, 0x1e, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x66, 0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x1b, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x68, 0x0a, 0x1f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x72, 0x65, 0x79,
	0x6d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x1c, 0x61, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x30, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x10,
	0x4b, 0x65, 0x65, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x13, 0x0a,
	0x11, 0x4b, 0x65, 0x65, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_sync_management_lease_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sync_management_lease_proto_goTypes = []any{
	(*LocalLock)(nil),           // 0: freym.sync.management.LocalLock
	(*GlobalLock)(nil),          // 1: freym.sync.management.GlobalLock
	(*CreateLeaseRequest)(nil),  // 2: freym.sync.management.CreateLeaseRequest
	(*CreateLeaseResponse)(nil), // 3: freym.sync.management.CreateLeaseResponse
	(*KeepLeaseRequest)(nil),    // 4: freym.sync.management.KeepLeaseRequest
	(*KeepLeaseResponse)(nil),   // 5: freym.sync.management.KeepLeaseResponse
	(*DropLeaseRequest)(nil),    // 6: freym.sync.management.DropLeaseRequest
	(*DropLeaseResponse)(nil),   // 7: freym.sync.management.DropLeaseResponse
}
var file_sync_management_lease_proto_depIdxs = []int32{
	0, // 0: freym.sync.management.CreateLeaseRequest.already_registered_local_locks:type_name -> freym.sync.management.LocalLock
	1, // 1: freym.sync.management.CreateLeaseRequest.already_registered_global_locks:type_name -> freym.sync.management.GlobalLock
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_sync_management_lease_proto_init() }
func file_sync_management_lease_proto_init() {
	if File_sync_management_lease_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sync_management_lease_proto_rawDesc), len(file_sync_management_lease_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sync_management_lease_proto_goTypes,
		DependencyIndexes: file_sync_management_lease_proto_depIdxs,
		MessageInfos:      file_sync_management_lease_proto_msgTypes,
	}.Build()
	File_sync_management_lease_proto = out.File
	file_sync_management_lease_proto_goTypes = nil
	file_sync_management_lease_proto_depIdxs = nil
}
