// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: streams/management/paginate.proto

package managementpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaginateStreamRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TenantId        string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_Topic           string                 `protobuf:"bytes,2,opt,name=topic,proto3"`
	xxx_hidden_Stream          string                 `protobuf:"bytes,3,opt,name=stream,proto3"`
	xxx_hidden_Page            int64                  `protobuf:"varint,4,opt,name=page,proto3"`
	xxx_hidden_PerPage         int64                  `protobuf:"varint,5,opt,name=per_page,json=perPage,proto3"`
	xxx_hidden_DeploymentId    int64                  `protobuf:"varint,6,opt,name=deployment_id,json=deploymentId,proto3"`
	xxx_hidden_SnapshotEventId string                 `protobuf:"bytes,7,opt,name=snapshot_event_id,json=snapshotEventId,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PaginateStreamRequest) Reset() {
	*x = PaginateStreamRequest{}
	mi := &file_streams_management_paginate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateStreamRequest) ProtoMessage() {}

func (x *PaginateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateStreamRequest) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *PaginateStreamRequest) GetTopic() string {
	if x != nil {
		return x.xxx_hidden_Topic
	}
	return ""
}

func (x *PaginateStreamRequest) GetStream() string {
	if x != nil {
		return x.xxx_hidden_Stream
	}
	return ""
}

func (x *PaginateStreamRequest) GetPage() int64 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *PaginateStreamRequest) GetPerPage() int64 {
	if x != nil {
		return x.xxx_hidden_PerPage
	}
	return 0
}

func (x *PaginateStreamRequest) GetDeploymentId() int64 {
	if x != nil {
		return x.xxx_hidden_DeploymentId
	}
	return 0
}

func (x *PaginateStreamRequest) GetSnapshotEventId() string {
	if x != nil {
		return x.xxx_hidden_SnapshotEventId
	}
	return ""
}

func (x *PaginateStreamRequest) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *PaginateStreamRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = v
}

func (x *PaginateStreamRequest) SetStream(v string) {
	x.xxx_hidden_Stream = v
}

func (x *PaginateStreamRequest) SetPage(v int64) {
	x.xxx_hidden_Page = v
}

func (x *PaginateStreamRequest) SetPerPage(v int64) {
	x.xxx_hidden_PerPage = v
}

func (x *PaginateStreamRequest) SetDeploymentId(v int64) {
	x.xxx_hidden_DeploymentId = v
}

func (x *PaginateStreamRequest) SetSnapshotEventId(v string) {
	x.xxx_hidden_SnapshotEventId = v
}

type PaginateStreamRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TenantId string
	Topic    string
	Stream   string
	Page     int64
	PerPage  int64
	// when a deployment_id (!= 0) is provided the snapshot will only be used by queries with a deployment_id that is equal or higher than the shapshot deployment_id.
	DeploymentId    int64
	SnapshotEventId string
}

func (b0 PaginateStreamRequest_builder) Build() *PaginateStreamRequest {
	m0 := &PaginateStreamRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_Topic = b.Topic
	x.xxx_hidden_Stream = b.Stream
	x.xxx_hidden_Page = b.Page
	x.xxx_hidden_PerPage = b.PerPage
	x.xxx_hidden_DeploymentId = b.DeploymentId
	x.xxx_hidden_SnapshotEventId = b.SnapshotEventId
	return m0
}

type PaginateStreamResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Events          *[]*Event              `protobuf:"bytes,1,rep,name=events,proto3"`
	xxx_hidden_SnapshotEventId string                 `protobuf:"bytes,2,opt,name=snapshot_event_id,json=snapshotEventId,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PaginateStreamResponse) Reset() {
	*x = PaginateStreamResponse{}
	mi := &file_streams_management_paginate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateStreamResponse) ProtoMessage() {}

func (x *PaginateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateStreamResponse) GetEvents() []*Event {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *PaginateStreamResponse) GetSnapshotEventId() string {
	if x != nil {
		return x.xxx_hidden_SnapshotEventId
	}
	return ""
}

func (x *PaginateStreamResponse) SetEvents(v []*Event) {
	x.xxx_hidden_Events = &v
}

func (x *PaginateStreamResponse) SetSnapshotEventId(v string) {
	x.xxx_hidden_SnapshotEventId = v
}

type PaginateStreamResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Events          []*Event
	SnapshotEventId string
}

func (b0 PaginateStreamResponse_builder) Build() *PaginateStreamResponse {
	m0 := &PaginateStreamResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	x.xxx_hidden_SnapshotEventId = b.SnapshotEventId
	return m0
}

type PaginateStreamAfterEventIdRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TenantId        string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_Topic           string                 `protobuf:"bytes,2,opt,name=topic,proto3"`
	xxx_hidden_Stream          string                 `protobuf:"bytes,3,opt,name=stream,proto3"`
	xxx_hidden_EventId         string                 `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3"`
	xxx_hidden_Page            int64                  `protobuf:"varint,5,opt,name=page,proto3"`
	xxx_hidden_PerPage         int64                  `protobuf:"varint,6,opt,name=per_page,json=perPage,proto3"`
	xxx_hidden_DeploymentId    int64                  `protobuf:"varint,7,opt,name=deployment_id,json=deploymentId,proto3"`
	xxx_hidden_SnapshotEventId string                 `protobuf:"bytes,8,opt,name=snapshot_event_id,json=snapshotEventId,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PaginateStreamAfterEventIdRequest) Reset() {
	*x = PaginateStreamAfterEventIdRequest{}
	mi := &file_streams_management_paginate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateStreamAfterEventIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateStreamAfterEventIdRequest) ProtoMessage() {}

func (x *PaginateStreamAfterEventIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateStreamAfterEventIdRequest) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *PaginateStreamAfterEventIdRequest) GetTopic() string {
	if x != nil {
		return x.xxx_hidden_Topic
	}
	return ""
}

func (x *PaginateStreamAfterEventIdRequest) GetStream() string {
	if x != nil {
		return x.xxx_hidden_Stream
	}
	return ""
}

func (x *PaginateStreamAfterEventIdRequest) GetEventId() string {
	if x != nil {
		return x.xxx_hidden_EventId
	}
	return ""
}

func (x *PaginateStreamAfterEventIdRequest) GetPage() int64 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *PaginateStreamAfterEventIdRequest) GetPerPage() int64 {
	if x != nil {
		return x.xxx_hidden_PerPage
	}
	return 0
}

func (x *PaginateStreamAfterEventIdRequest) GetDeploymentId() int64 {
	if x != nil {
		return x.xxx_hidden_DeploymentId
	}
	return 0
}

func (x *PaginateStreamAfterEventIdRequest) GetSnapshotEventId() string {
	if x != nil {
		return x.xxx_hidden_SnapshotEventId
	}
	return ""
}

func (x *PaginateStreamAfterEventIdRequest) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *PaginateStreamAfterEventIdRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = v
}

func (x *PaginateStreamAfterEventIdRequest) SetStream(v string) {
	x.xxx_hidden_Stream = v
}

func (x *PaginateStreamAfterEventIdRequest) SetEventId(v string) {
	x.xxx_hidden_EventId = v
}

func (x *PaginateStreamAfterEventIdRequest) SetPage(v int64) {
	x.xxx_hidden_Page = v
}

func (x *PaginateStreamAfterEventIdRequest) SetPerPage(v int64) {
	x.xxx_hidden_PerPage = v
}

func (x *PaginateStreamAfterEventIdRequest) SetDeploymentId(v int64) {
	x.xxx_hidden_DeploymentId = v
}

func (x *PaginateStreamAfterEventIdRequest) SetSnapshotEventId(v string) {
	x.xxx_hidden_SnapshotEventId = v
}

type PaginateStreamAfterEventIdRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TenantId string
	Topic    string
	Stream   string
	EventId  string
	Page     int64
	PerPage  int64
	// when a deployment_id (!= 0) is provided the snapshot will only be used by queries with a deployment_id that is equal or higher than the shapshot deployment_id.
	DeploymentId    int64
	SnapshotEventId string
}

func (b0 PaginateStreamAfterEventIdRequest_builder) Build() *PaginateStreamAfterEventIdRequest {
	m0 := &PaginateStreamAfterEventIdRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_Topic = b.Topic
	x.xxx_hidden_Stream = b.Stream
	x.xxx_hidden_EventId = b.EventId
	x.xxx_hidden_Page = b.Page
	x.xxx_hidden_PerPage = b.PerPage
	x.xxx_hidden_DeploymentId = b.DeploymentId
	x.xxx_hidden_SnapshotEventId = b.SnapshotEventId
	return m0
}

type PaginateStreamAfterEventIdResponse struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Events          *[]*Event              `protobuf:"bytes,1,rep,name=events,proto3"`
	xxx_hidden_SnapshotEventId string                 `protobuf:"bytes,2,opt,name=snapshot_event_id,json=snapshotEventId,proto3"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PaginateStreamAfterEventIdResponse) Reset() {
	*x = PaginateStreamAfterEventIdResponse{}
	mi := &file_streams_management_paginate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateStreamAfterEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateStreamAfterEventIdResponse) ProtoMessage() {}

func (x *PaginateStreamAfterEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateStreamAfterEventIdResponse) GetEvents() []*Event {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *PaginateStreamAfterEventIdResponse) GetSnapshotEventId() string {
	if x != nil {
		return x.xxx_hidden_SnapshotEventId
	}
	return ""
}

func (x *PaginateStreamAfterEventIdResponse) SetEvents(v []*Event) {
	x.xxx_hidden_Events = &v
}

func (x *PaginateStreamAfterEventIdResponse) SetSnapshotEventId(v string) {
	x.xxx_hidden_SnapshotEventId = v
}

type PaginateStreamAfterEventIdResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Events          []*Event
	SnapshotEventId string
}

func (b0 PaginateStreamAfterEventIdResponse_builder) Build() *PaginateStreamAfterEventIdResponse {
	m0 := &PaginateStreamAfterEventIdResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	x.xxx_hidden_SnapshotEventId = b.SnapshotEventId
	return m0
}

type PaginateEventsRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TenantId string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_Topic    string                 `protobuf:"bytes,2,opt,name=topic,proto3"`
	xxx_hidden_Types    []string               `protobuf:"bytes,3,rep,name=types,proto3"`
	xxx_hidden_Page     int64                  `protobuf:"varint,4,opt,name=page,proto3"`
	xxx_hidden_PerPage  int64                  `protobuf:"varint,5,opt,name=per_page,json=perPage,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PaginateEventsRequest) Reset() {
	*x = PaginateEventsRequest{}
	mi := &file_streams_management_paginate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateEventsRequest) ProtoMessage() {}

func (x *PaginateEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateEventsRequest) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *PaginateEventsRequest) GetTopic() string {
	if x != nil {
		return x.xxx_hidden_Topic
	}
	return ""
}

func (x *PaginateEventsRequest) GetTypes() []string {
	if x != nil {
		return x.xxx_hidden_Types
	}
	return nil
}

func (x *PaginateEventsRequest) GetPage() int64 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *PaginateEventsRequest) GetPerPage() int64 {
	if x != nil {
		return x.xxx_hidden_PerPage
	}
	return 0
}

func (x *PaginateEventsRequest) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *PaginateEventsRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = v
}

func (x *PaginateEventsRequest) SetTypes(v []string) {
	x.xxx_hidden_Types = v
}

func (x *PaginateEventsRequest) SetPage(v int64) {
	x.xxx_hidden_Page = v
}

func (x *PaginateEventsRequest) SetPerPage(v int64) {
	x.xxx_hidden_PerPage = v
}

type PaginateEventsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TenantId string
	Topic    string
	Types    []string
	Page     int64
	PerPage  int64
}

func (b0 PaginateEventsRequest_builder) Build() *PaginateEventsRequest {
	m0 := &PaginateEventsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_Topic = b.Topic
	x.xxx_hidden_Types = b.Types
	x.xxx_hidden_Page = b.Page
	x.xxx_hidden_PerPage = b.PerPage
	return m0
}

type PaginateEventsResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Events *[]*Event              `protobuf:"bytes,1,rep,name=events,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PaginateEventsResponse) Reset() {
	*x = PaginateEventsResponse{}
	mi := &file_streams_management_paginate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateEventsResponse) ProtoMessage() {}

func (x *PaginateEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateEventsResponse) GetEvents() []*Event {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *PaginateEventsResponse) SetEvents(v []*Event) {
	x.xxx_hidden_Events = &v
}

type PaginateEventsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Events []*Event
}

func (b0 PaginateEventsResponse_builder) Build() *PaginateEventsResponse {
	m0 := &PaginateEventsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	return m0
}

type PaginateEventsAfterEventIdRequest struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TenantId string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3"`
	xxx_hidden_Topic    string                 `protobuf:"bytes,2,opt,name=topic,proto3"`
	xxx_hidden_Types    []string               `protobuf:"bytes,3,rep,name=types,proto3"`
	xxx_hidden_EventId  string                 `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3"`
	xxx_hidden_Page     int64                  `protobuf:"varint,5,opt,name=page,proto3"`
	xxx_hidden_PerPage  int64                  `protobuf:"varint,6,opt,name=per_page,json=perPage,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PaginateEventsAfterEventIdRequest) Reset() {
	*x = PaginateEventsAfterEventIdRequest{}
	mi := &file_streams_management_paginate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateEventsAfterEventIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateEventsAfterEventIdRequest) ProtoMessage() {}

func (x *PaginateEventsAfterEventIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateEventsAfterEventIdRequest) GetTenantId() string {
	if x != nil {
		return x.xxx_hidden_TenantId
	}
	return ""
}

func (x *PaginateEventsAfterEventIdRequest) GetTopic() string {
	if x != nil {
		return x.xxx_hidden_Topic
	}
	return ""
}

func (x *PaginateEventsAfterEventIdRequest) GetTypes() []string {
	if x != nil {
		return x.xxx_hidden_Types
	}
	return nil
}

func (x *PaginateEventsAfterEventIdRequest) GetEventId() string {
	if x != nil {
		return x.xxx_hidden_EventId
	}
	return ""
}

func (x *PaginateEventsAfterEventIdRequest) GetPage() int64 {
	if x != nil {
		return x.xxx_hidden_Page
	}
	return 0
}

func (x *PaginateEventsAfterEventIdRequest) GetPerPage() int64 {
	if x != nil {
		return x.xxx_hidden_PerPage
	}
	return 0
}

func (x *PaginateEventsAfterEventIdRequest) SetTenantId(v string) {
	x.xxx_hidden_TenantId = v
}

func (x *PaginateEventsAfterEventIdRequest) SetTopic(v string) {
	x.xxx_hidden_Topic = v
}

func (x *PaginateEventsAfterEventIdRequest) SetTypes(v []string) {
	x.xxx_hidden_Types = v
}

func (x *PaginateEventsAfterEventIdRequest) SetEventId(v string) {
	x.xxx_hidden_EventId = v
}

func (x *PaginateEventsAfterEventIdRequest) SetPage(v int64) {
	x.xxx_hidden_Page = v
}

func (x *PaginateEventsAfterEventIdRequest) SetPerPage(v int64) {
	x.xxx_hidden_PerPage = v
}

type PaginateEventsAfterEventIdRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TenantId string
	Topic    string
	Types    []string
	EventId  string
	Page     int64
	PerPage  int64
}

func (b0 PaginateEventsAfterEventIdRequest_builder) Build() *PaginateEventsAfterEventIdRequest {
	m0 := &PaginateEventsAfterEventIdRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_TenantId = b.TenantId
	x.xxx_hidden_Topic = b.Topic
	x.xxx_hidden_Types = b.Types
	x.xxx_hidden_EventId = b.EventId
	x.xxx_hidden_Page = b.Page
	x.xxx_hidden_PerPage = b.PerPage
	return m0
}

type PaginateEventsAfterEventIdResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Events *[]*Event              `protobuf:"bytes,1,rep,name=events,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PaginateEventsAfterEventIdResponse) Reset() {
	*x = PaginateEventsAfterEventIdResponse{}
	mi := &file_streams_management_paginate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginateEventsAfterEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginateEventsAfterEventIdResponse) ProtoMessage() {}

func (x *PaginateEventsAfterEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_streams_management_paginate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PaginateEventsAfterEventIdResponse) GetEvents() []*Event {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *PaginateEventsAfterEventIdResponse) SetEvents(v []*Event) {
	x.xxx_hidden_Events = &v
}

type PaginateEventsAfterEventIdResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Events []*Event
}

func (b0 PaginateEventsAfterEventIdResponse_builder) Build() *PaginateEventsAfterEventIdResponse {
	m0 := &PaginateEventsAfterEventIdResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	return m0
}

var File_streams_management_paginate_proto protoreflect.FileDescriptor

var file_streams_management_paginate_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x66, 0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x01,
	0x0a, 0x15, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x7d, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x89, 0x02, 0x0a, 0x21, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x89, 0x01,
	0x0a, 0x22, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb6,
	0x01, 0x0a, 0x21, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x22, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x66, 0x72, 0x65, 0x79, 0x6d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_streams_management_paginate_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_streams_management_paginate_proto_goTypes = []any{
	(*PaginateStreamRequest)(nil),              // 0: freym.streams.management.PaginateStreamRequest
	(*PaginateStreamResponse)(nil),             // 1: freym.streams.management.PaginateStreamResponse
	(*PaginateStreamAfterEventIdRequest)(nil),  // 2: freym.streams.management.PaginateStreamAfterEventIdRequest
	(*PaginateStreamAfterEventIdResponse)(nil), // 3: freym.streams.management.PaginateStreamAfterEventIdResponse
	(*PaginateEventsRequest)(nil),              // 4: freym.streams.management.PaginateEventsRequest
	(*PaginateEventsResponse)(nil),             // 5: freym.streams.management.PaginateEventsResponse
	(*PaginateEventsAfterEventIdRequest)(nil),  // 6: freym.streams.management.PaginateEventsAfterEventIdRequest
	(*PaginateEventsAfterEventIdResponse)(nil), // 7: freym.streams.management.PaginateEventsAfterEventIdResponse
	(*Event)(nil), // 8: freym.streams.management.Event
}
var file_streams_management_paginate_proto_depIdxs = []int32{
	8, // 0: freym.streams.management.PaginateStreamResponse.events:type_name -> freym.streams.management.Event
	8, // 1: freym.streams.management.PaginateStreamAfterEventIdResponse.events:type_name -> freym.streams.management.Event
	8, // 2: freym.streams.management.PaginateEventsResponse.events:type_name -> freym.streams.management.Event
	8, // 3: freym.streams.management.PaginateEventsAfterEventIdResponse.events:type_name -> freym.streams.management.Event
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_streams_management_paginate_proto_init() }
func file_streams_management_paginate_proto_init() {
	if File_streams_management_paginate_proto != nil {
		return
	}
	file_streams_management_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_streams_management_paginate_proto_rawDesc), len(file_streams_management_paginate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_streams_management_paginate_proto_goTypes,
		DependencyIndexes: file_streams_management_paginate_proto_depIdxs,
		MessageInfos:      file_streams_management_paginate_proto_msgTypes,
	}.Build()
	File_streams_management_paginate_proto = out.File
	file_streams_management_paginate_proto_goTypes = nil
	file_streams_management_paginate_proto_depIdxs = nil
}
